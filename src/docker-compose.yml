version: "3.9"

services:
  # API Gateway
  gateway-service:
    build: ./gateway-service
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
      - auth-service
      - user-service
      - plan-service
      - task-service
    networks:
      - planbookai-network

  # Authentication Service (DB: planbookai_auth)
  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=planbookai_auth
    depends_on:
      - postgres
    networks:
      - planbookai-network

  # User Management Service (DB: planbookai_user)
  user-service:
    build: ./user-service
    ports:
      - "8082:8082"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=planbookai_user
    depends_on:
      - postgres
    networks:
      - planbookai-network

  # Lesson Plan Service (DB: planbookai_plan)
  plan-service:
    build: ./plan-service
    ports:
      - "8083:8083"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=planbookai_plan
    depends_on:
      - postgres
    networks:
      - planbookai-network

  # Task Management Service (DB: planbookai_task)
  task-service:
    build: ./task-service
    ports:
      - "8084:8084"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=planbookai_task
    depends_on:
      - postgres
    networks:
      - planbookai-network

  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: planbookai-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-auth.sql:/docker-entrypoint-initdb.d/init-auth.sql
      - ./scripts/init-user.sql:/docker-entrypoint-initdb.d/init-user.sql
      - ./scripts/init-plan.sql:/docker-entrypoint-initdb.d/init-plan.sql
      - ./scripts/init-task.sql:/docker-entrypoint-initdb.d/init-task.sql
    networks:
      - planbookai-network

volumes:
  postgres_data:
    driver: local

networks:
  planbookai-network:
    driver: bridge
